package views

import "htmx-templ/views/layout"
import "htmx-templ/database/sqlc"
import "fmt"
import "htmx-templ/views/components"

templ Projects(projects []sqlc.Project) {
	@layout.Main("Projects") {
		<h1 class="text-lg">Projects</h1>
		<div id="projectlist" class="flex flex-wrap justify-center">
			<button data-modal-target="crud-modal" data-modal-toggle="crud-modal">
				<div class="flex items-center justify-center p-6 m-5 transition-all bg-transparent border-2 border-gray-200 border-dashed rounded-lg select-none dark:hover:bg-gray-800 active:scale-95 hover:scale-105 hover:bg-white hover:border-solid hover:shadow-md w-72 h-72 dark:border-gray-700">
					<div class="m-auto text-center text-9xl">+</div>
				</div>
			</button>
			for _, p := range projects {
				@card(p)
			}
			@loading()
		</div>
		@modal()
	}
}

templ loading() {
	<div id="loading-spinner" class="flex-col items-center justify-center hidden p-6 m-5 bg-white border border-gray-200 rounded-lg shadow htmx-request:flex group w-72 h-72 dark:bg-gray-800 dark:border-gray-700">
		@components.Spinner()
	</div>
}

templ card(p sqlc.Project) {
	<div class="flex flex-col justify-between p-6 m-5 transition-all bg-white border border-gray-200 rounded-lg shadow hover:shadow-lg group w-72 h-72 dark:bg-gray-800 dark:border-gray-700">
		<div class="flex items-center justify-between">
			<div>
				<h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">{ p.Name }</h5>
			</div>
			<div>
				<span class=" bg-blue-100 text-blue-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-blue-900 dark:text-blue-300">{ p.Cluster }</span>
			</div>
		</div>
		<table class="font-normal text-gray-700 dark:text-gray-400">
			<tbody>
				<tr>
					<th class="text-left">CPU</th>
					<td class="text-right">{ fmt.Sprintf("%d mCPU",p.Cpu ) }</td>
				</tr>
				<tr>
					<th class="text-left">Memory</th>
					<td class="text-right">{ fmt.Sprintf("%.2f GiB",float32(p.Memory) / 1024.0) }</td>
				</tr>
				<tr>
					<th class="text-left">Storage</th>
					<td class="text-right">{ fmt.Sprintf("%.2f GiB",float32(p.Storage) / 1024.0) }</td>
				</tr>
			</tbody>
		</table>
		<div class="flex justify-end">
			<a href={ templ.SafeURL(fmt.Sprintf("/projects/%d", p.ID)) } class="inline-flex items-center px-3 py-2 text-sm font-medium text-right text-black bg-transparent border border-blue-700 rounded-lg hover:scale-105 group-hover:text-white dark:text-white group-hover:bg-blue-700 group-hover:dark:bg-blue-600 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
				Details
				<svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
					<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"></path>
				</svg>
			</a>
		</div>
	</div>
}

templ modal() {
	<!-- Main modal -->
	<div id="crud-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
		<div class="relative max-h-full p-4">
			<!-- Modal content -->
			<div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
				<!-- Modal header -->
				<div class="flex items-center justify-between p-4 border-b rounded-t md:p-5 dark:border-gray-600">
					<h3 class="text-lg font-semibold text-gray-900 dark:text-white">Order new Project</h3>
					<button type="button" class="inline-flex items-center justify-center w-8 h-8 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900 ms-auto dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="crud-modal">
						<svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
						</svg>
						<span class="sr-only">Close modal</span>
					</button>
				</div>
				<!-- Modal body -->
				<form id="order" hx-indicator="#loading-spinner" hx-post="/projects" hx-trigger="submit" hx-swap="outerHTML" hx-target="#loading-spinner" class="p-4 md:p-5" hx->
					<div class="grid grid-cols-2 gap-4 mb-4">
						<div class="col-span-2">
							<label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Name</label>
							<input type="text" name="name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Type project name" required=""/>
						</div>
						<div class="col-span-2 sm:col-span-1">
							@datainput("CPU", "mCPU", "3400 mCPU", "number")
						</div>
						<div class="col-span-2 sm:col-span-1">
							@datainput("Memory", "MiB", "1024 MiB", "number")
						</div>
						<div class="col-span-2 sm:col-span-1">
							@datainput("Storage", "GiB", "5 GiB", "number")
						</div>
						<div class="col-span-2 sm:col-span-1">
							<label for="cluster" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Select an option</label>
							<select id="cluster" name="cluster" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
								<option value="t07 ">T07 - DE3 test Cluster 07 (TPC)</option>
								<option value="t04 ">T04 - DE3 Test Cluster 04 (GCP)</option>
								<option value="t02 ">T02 - DE3 Test Cluster 02 (OTC)</option>
								<option value="t21 ">T21 - DE4 test Cluster (TPC)</option>
								<option value="t03 ">T03 - DE3 Test Cluster 03 (AWS)</option>
							</select>
						</div>
					</div>
					<button type="submit" class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
						<svg class="w-5 h-5 me-1 -ms-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
						Order
					</button>
				</form>
			</div>
		</div>
	</div>
	@closeModal()
}

templ datainput(name, unit, placeholder, inputtype string) {
	<div class="w-full">
		<label for={ name } class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">{ name }</label>
		<div class="flex justify-center ">
			<input type={ inputtype } name={ name } id={ name } class="bg-gray-50 border border-gray-300 border-r-0 text-gray-900 mr-0 text-sm rounded-l-lg focus:ring-primary-600 focus:border-primary-600 inline p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder={ placeholder } required=""/>
			<span class="p-2.5 ml-0 w-16 text-center text-sm text-gray-500 border border-gray-300 rounded-r-lg bg-gray-50 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-gray-300">{ unit }</span>
		</div>
	</div>
}

script closeModal() {
	htmx.onLoad(() => {
		htmx.on("#order", "submit", (e)=> {
			console.log("ordering")
			const $targetEl = document.getElementById('crud-modal');
			const modal = new Modal($targetEl)
			modal.hide()
		})
	})
}
